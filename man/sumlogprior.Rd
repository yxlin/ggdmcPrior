% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{sumlogprior}
\alias{sumlogprior}
\title{Sum of joint densities}
\usage{
sumlogprior(p_prior_r, parameters_r)
}
\arguments{
\item{p_prior_r}{A List of prior specifications, where each element is
               itself a List containing the distribution details
               for one parameter. Each sublist should contain:
\itemize{
   \item \code{p0}: The first parameter of the distribution.
   \item \code{p1}: The second parameter of the distribution.
   \item \code{lower}: The lower bound of the distribution.
   \item \code{upper}: The upper bound of the distribution.
   \item \code{dist}: A numeric code representing the distribution type.
   \item \code{log_p}: Logical indicating whether probabilities
                       are logged.
 }}

\item{parameters_r}{A NumericVector of parameter values at which to
evaluate the densities. The length should match
the length of \code{p_prior_r}.}
}
\value{
A single double value representing the sum of log-prior densities:
        \deqn{\sum_{i=1}^{k} \log p(\theta_i | \text{prior}_i)}
        where \eqn{k} is the number of parameters.
}
\description{
Computes the sum of joint densities for a vector of parameters given
the distribution specification. The function computes log densities
only when the \code{log_p} is set to TRUE. This function can be
used in Bayesian computations where the joint prior is the product
of independent priors (sum in log-space).
}
\details{
This function:
\itemize{
  \item Iterates through each parameter and its prior specification
  \item Computes the log-density for each parameter value
  \item Sums all log-density values
  \item Returns the total sum (useful for log-posterior computation)
}
}
\examples{
p0 <- c(A = 0.15, B = 0.45, mean_v = 2.25, sd_v = 0.15, t0 = 0.2)
tnorm_prior <- BuildPrior(
    p0 = p0,
    p1 = rep(1, 5),
    lower = rep(0, 5),
    upper = rep(NA, 5),
    dist = rep("tnorm", 5),
    log_p = rep(TRUE, 5)
)

npar <- length(tnorm_prior)
result <- sumlogprior(p_prior_r = tnorm_prior,
                      parameters_r = runif(npar, 0, 10))
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggdmcPrior.R
\name{plot_prior}
\alias{plot_prior}
\title{Visualise distributions}
\usage{
plot_prior(p_prior, font_size = 5, cex = 5, return_data = FALSE)
}
\arguments{
\item{p_prior}{A list of distribution specifications, where each element
is a list containing:
       \describe{
         \item{dist}{Character specifying the distribution ("tnorm",
                     "beta", "gamma", "lnorm", "cauchy", "unif", "norm")}
         \item{p0}{First parameter of the distribution}
         \item{p1}{Second parameter of the distribution (where applicable)}
         \item{lower}{Optional vector specifying lower bounds (for
            truncated distributions)}
         \item{upper}{Optional vector specifying upper bounds (for
            truncated distributions)}
         \item{log_p}{Logical indicating whether to compute log densities}
 }}

\item{font_size}{Numeric base font size for plot labels (default = 5).}

\item{cex}{Numeric scaling factor for plot elements (default = 5).}

\item{return_data}{Logical indicating whether to return the calculated
density data instead of plotting (default = FALSE).}
}
\value{
If `return_data = FALSE` (default), returns a lattice object showing
the prior densities. If `return_data = TRUE`, returns a data frame:
        \itemize{
          \item \code{x}: \code{npoint} x values generated based on the heuristic
                           set in \code{generate_x_value} internal function.
          \item \code{y}: the corresponding density values
          \item \code{gp}: Parameter names corresponding to each value
        }
}
\description{
Plots density curves for specified distributions to help visualise
their shape and domain.
}
\details{
This function:
\itemize{
  \item Automatically determines appropriate x-axis ranges based on each
        prior's properties
  \item Handles both bounded and unbounded distributions
  \item Supports all distribution types available in the package
}

For truncated distributions, the plot shows the density within the specified
bounds. The function automatically generates appropriate axis limits and
labels for each prior.
}
\examples{
# Define a joint distribution
p_prior <- BuildPrior(
    p0 = c(A = 0.15, B = 0.45, mean_v = 2.25, sd_v = 0.15, t0 = 0.2),
    p1 = rep(0.1, 5),
    lower = rep(NA, 5),
    upper = rep(NA, 5),
    dist = rep("tnorm", 5),
    log_p = rep(FALSE, 5)
)

plot_prior(p_prior)

}
